{"ast":null,"code":"import _objectSpread from \"/Users/jonathanlui/Desktop/clickygame/clickygame/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jonathanlui/Desktop/clickygame/clickygame/src/components/board/board.js\";\nimport React, { Component } from 'react';\nimport MoviePoster from './moviePoster';\nimport Score from './score';\nconst posters = [{\n  name: 'adaptation',\n  img: 'img/adaptation.jpg',\n  clicked: false\n}, {\n  name: 'arizona',\n  img: 'img/arizona.jpg',\n  clicked: false\n}, {\n  name: 'conair',\n  img: 'img/conair.jpg',\n  clicked: false\n}, {\n  name: 'faceoff',\n  img: 'img/faceoff.jpg',\n  clicked: false\n}, {\n  name: 'gone',\n  img: 'img/gone.jpg',\n  clicked: false\n}, {\n  name: 'kissofdeath',\n  img: 'img/kissofdeath.jpg',\n  clicked: false\n}, {\n  name: 'lasvegas',\n  img: 'img/lasvegas.jpg',\n  clicked: false\n}, {\n  name: 'matchstick',\n  img: 'img/matchstick.jpg',\n  clicked: false\n}, {\n  name: 'next',\n  img: 'img/next.jpg',\n  clicked: false\n}, {\n  name: 'snakeeyes',\n  img: 'img/snakeeyes.jpg',\n  clicked: false\n}, {\n  name: 'thefamilyman',\n  img: 'img/thefamilyman.jpg',\n  clicked: false\n}, {\n  name: 'therock',\n  img: 'img/therock.jpg',\n  clicked: false\n}];\n\nconst shuffle = arr => arr.map(a => [Math.random(), a]).sort((a, b) => a[0] - b[0]).map(a => a[1]);\n\nexport default class Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMovieClick = index => {\n      if (!this.state.movies[index].clicked) {\n        this.setState({\n          movies: shuffle(this.state.movies.map((movie, current) => {\n            return current === index ? _objectSpread({}, movie, {\n              clicked: true\n            }) : movie;\n          })),\n          user: _objectSpread({}, this.state.user, {\n            score: this.state.user.score + 1\n          })\n        });\n      } else {\n        this.setState({\n          movies: shuffle(this.state.movies.map(movie => {\n            return _objectSpread({}, movie, {\n              clicked: false\n            });\n          })),\n          user: _objectSpread({}, this.state.user, {\n            score: 0\n          })\n        });\n      }\n    };\n\n    this.state = {\n      user: {\n        score: 0\n      },\n      movies: shuffle(posters)\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" There are 12 movies. Pick a movie only once.\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"If you pick the same movie twice, the score resets.\"), React.createElement(Score, {\n      score: this.state.user.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(MoviePoster, {\n      movies: this.state.movies,\n      onMovieClick: this.onMovieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jonathanlui/Desktop/clickygame/clickygame/src/components/board/board.js"],"names":["React","Component","MoviePoster","Score","posters","name","img","clicked","shuffle","arr","map","a","Math","random","sort","b","Board","constructor","props","onMovieClick","index","state","movies","setState","movie","current","user","score","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport MoviePoster from './moviePoster';\nimport Score from './score';\n\nconst posters = [\n    {\n        name: 'adaptation',\n        img: 'img/adaptation.jpg',\n        clicked: false\n    },\n    {\n        name: 'arizona',\n        img: 'img/arizona.jpg',\n        clicked: false\n    },\n    {\n        name: 'conair',\n        img: 'img/conair.jpg',\n        clicked: false\n    },\n    {\n        name: 'faceoff',\n        img: 'img/faceoff.jpg',\n        clicked: false\n    },\n    {\n        name: 'gone',\n        img: 'img/gone.jpg',\n        clicked: false\n    },\n    {\n        name: 'kissofdeath',\n        img: 'img/kissofdeath.jpg',\n        clicked: false\n    },\n    {\n        name: 'lasvegas',\n        img: 'img/lasvegas.jpg',\n        clicked: false\n    },\n    {\n        name: 'matchstick',\n        img: 'img/matchstick.jpg',\n        clicked: false\n    },\n    {\n        name: 'next',\n        img: 'img/next.jpg',\n        clicked: false\n    },\n    {\n        name: 'snakeeyes',\n        img: 'img/snakeeyes.jpg',\n        clicked: false\n    },\n    {\n        name: 'thefamilyman',\n        img: 'img/thefamilyman.jpg',\n        clicked: false\n    },\n    {\n        name: 'therock',\n        img: 'img/therock.jpg',\n        clicked: false\n    }\n]\n\nconst shuffle = arr => (\n    arr\n        .map(a => [Math.random(), a])\n        .sort((a, b) => a[0] - b[0])\n        .map(a => a[1])\n);\n\n\nexport default class Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                score: 0\n            },\n            movies: shuffle(posters)\n        };\n    }\n\n    onMovieClick = (index) => {\n        if (!this.state.movies[index].clicked) {\n            this.setState({\n                movies: shuffle(this.state.movies.map((movie, current) => {\n                    return (current === index) ? { ...movie, clicked: true } : movie\n                })),\n                user: {\n                    ...this.state.user,\n                    score: this.state.user.score + 1\n                }\n            });\n        } else {\n            this.setState({\n                movies: shuffle(this.state.movies.map(movie => { return { ...movie, clicked: false } })),\n                user: {\n                    ...this.state.user,\n                    score: 0\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"center\">\n                <h4> There are 12 movies. Pick a movie only once.</h4>\n                <h4>If you pick the same movie twice, the score resets.</h4>\n                <Score score={this.state.user.score} />\n                <MoviePoster movies={this.state.movies} onMovieClick={this.onMovieClick} />\n            </div>\n        )\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}